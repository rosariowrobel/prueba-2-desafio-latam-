name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up AWS CLI with credentials from GitHub Secrets
      - name: Set up AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-2

      # 3. Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 982081066879.dkr.ecr.us-east-2.amazonaws.com

      # 4. Build and push Docker image to ECR
      - name: Build and push Docker image
        run: |
          docker build -t 982081066879.dkr.ecr.us-east-2.amazonaws.com/mi-aplicacion-node:${{ github.sha }} .
          docker push 982081066879.dkr.ecr.us-east-2.amazonaws.com/mi-aplicacion-node:${{ github.sha }}

      # 5. Get the latest revision number of the task definition
      - name: Get latest task definition revision
        id: get_revision
        run: |
          REVISION=$(aws ecs list-task-definitions --family-prefix Microservicio-task-4 --sort DESC --max-items 1 --query "taskDefinitionArns[0]" --output text)
          echo "::set-output name=revision::$(echo $REVISION | sed 's/.*:\([0-9]*\)$/\1/')"

      # 6. Register new task definition
      - name: Register new task definition
        run: |
          aws ecs register-task-definition \
            --family Microservicio-task-4 \
            --container-definitions '[
              {
                "name": "app-container",
                "image": "982081066879.dkr.ecr.us-east-2.amazonaws.com/mi-aplicacion-node:${{ github.sha }}",
                "memory": 3072,
                "cpu": 1024,
                "essential": true,
                "portMappings": [
                  {
                    "containerPort": 3000,
                    "hostPort": 3000,
                    "protocol": "tcp"
                  }
                ]
              }
            ]'

      # 7. Update ECS service with the new task definition
      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster mi-cluster-ecs \
            --service mi-api-service \
            --force-new-deployment \
            --task-definition Microservicio-task-4:${{ steps.get_revision.outputs.revision }}
